name: "Terraform Multi-Stage Pipeline"

on:
  workflow_dispatch:  # manual trigger for full sequential run
  push:
    branches:
      - feature/dev
      - qa
      - main

jobs:
  # =======================
  # Feature/Dev → Dev
  # =======================
  dev:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: environment/dev
    steps:
      - name: Checkout feature/dev
        uses: actions/checkout@v3
        with:
          ref: feature/dev

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SECRET_ID }}

      - name: Terraform Init
        shell: pwsh
        run: terraform init

      - name: Terraform Plan
        shell: pwsh
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        shell: pwsh
        run: terraform apply -var-file="terraform.tfvars" -auto-approve

  # =======================
  # QA/Stage → DevSecOps + Terraform
  # =======================
  qa:
    needs: dev
    runs-on: self-hosted
    defaults:
      run:
        working-directory: environment/qa
    steps:
      - name: Checkout qa branch
        uses: actions/checkout@v3
        with:
          ref: qa

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SECRET_ID }}

      # ---------- DevSecOps Checks ----------
      - name: Install TFLint
        shell: pwsh
        run: choco install tflint -y

      - name: Run TFLint
        shell: pwsh
        run: tflint

      - name: Install TFSEC
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-windows-amd64.zip -OutFile tfsec.zip
          Expand-Archive tfsec.zip -DestinationPath $env:ProgramFiles\tfsec
          $env:PATH += ";$env:ProgramFiles\tfsec"

      - name: Run TFSEC
        shell: pwsh
        run: tfsec .

      # ---------- Terraform ----------
      - name: Terraform Init
        shell: pwsh
        run: terraform init

      - name: Terraform Plan
        shell: pwsh
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        shell: pwsh
        run: terraform apply -var-file="terraform.tfvars" -auto-approve

  # =======================
  # Main/Prod → Terraform Apply
  # =======================
  prod:
    needs: qa
    runs-on: self-hosted
    defaults:
      run:
        working-directory: environment/prod
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SECRET_ID }}

      - name: Terraform Init
        shell: pwsh
        run: terraform init

      - name: Terraform Plan
        shell: pwsh
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply (Prod)
        shell: pwsh
        run: terraform apply -var-file="terraform.tfvars" -auto-approve
